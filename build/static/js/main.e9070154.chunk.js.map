{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalContext.js","components/CurrentBalance.js","components/IncomeExpense.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","className","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","CurrentBalance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpense","amounts","income","expense","Math","abs","Transaction","sign","description","onClick","TransactionList","key","AddTransaction","useState","setDescription","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","name","defaultChecked","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9070154.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <h1 className=\"header\">\r\n            Expense tracker by M Yousif Channa\r\n        </h1>\r\n    )\r\n}\r\n","export default (state, action)=>{\r\nswitch (action.type){\r\n    case 'DELETE_TRANSACTION':\r\n        return {\r\n            ...state,\r\n            transactions: state.transactions.filter(transaction=>transaction.id !== action.payload\r\n        )}\r\n    case 'ADD_TRANSACTION':\r\n        return {\r\n            ...state,\r\n            transactions: [action.payload, ...state.transactions]\r\n        }\r\n    default: \r\n    return state;\r\n    }\r\n} ","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer'\r\n\r\n//Initial state \r\nconst initialState={\r\n    transactions: [\r\n        /* {id:1, description:\"salary\", amount:1000},\r\n        {id:2, description:\"bill\", amount:-100},\r\n        {id:3, description:\"salary2\", amount:1000},\r\n        {id:4, description:\"shopping\", amount:-500} */\r\n\r\n    ]\r\n}\r\n\r\n// create global context\r\nexport const GlobalContext = createContext(initialState)\r\n\r\n// create provider\r\n\r\nexport const GlobalProvider =({ children })=>{\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n     // Actions\r\n    function deleteTransaction(id){\r\n    dispatch({\r\n        type: \"DELETE_TRANSACTION\",\r\n        payload: id\r\n    })};\r\n    \r\n    function addTransaction(transaction){\r\n    dispatch({\r\n        type: \"ADD_TRANSACTION\",\r\n        payload: transaction\r\n    });\r\n}\r\n    return (<GlobalContext.Provider value={\r\n        {\r\n            transactions: state.transactions,\r\n            deleteTransaction,\r\n            addTransaction\r\n        }}\r\n        >{children}</GlobalContext.Provider>\r\n    )\r\n    }\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalContext'\r\n\r\nexport const CurrentBalance = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n    return (\r\n        <>\r\n        <h4>Current Balance</h4>\r\n        <h1>${total}</h1>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalContext'\r\n\r\nexport const IncomeExpense = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    const income = amounts.filter(item => item > 0).reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n    const expense = (amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *-1).toFixed(2);\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n        <div>\r\n          <h4>Income</h4>\r\n          <p className=\"money plus\">+${income}</p>\r\n        </div>\r\n        <div>\r\n          <h4>Expense</h4>\r\n          <p className=\"money minus\">-${Math.abs(expense)}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalContext';\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n    const sign =transaction.amount < 0 ? '-':'+' ;\r\n    const { deleteTransaction }=useContext(GlobalContext);\r\n    return (\r\n        <li className={transaction.amount < 0 ? \"minus\":\"plus\"}>\r\n    {transaction.description} <span>{sign}${Math.abs(transaction.amount)}</span>\r\n    <button className=\"delete-btn\" onClick={()=>deleteTransaction(transaction.id)}>x</button>\r\n        </li>\r\n    )\r\n}\r\n","import React, {useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalContext'\r\nimport { Transaction } from './Transaction';\r\n\r\n\r\nexport const TransactionList = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    return (\r\n        <> \r\n        <h3>History</h3>\r\n      <ul className=\"list\">\r\n        {transactions.map(transaction => (<Transaction key={transaction.id} transaction={ transaction } />))}\r\n      </ul>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalContext';\r\n\r\n\r\nexport const AddTransaction = () => {\r\n    const [description, setDescription]=useState();\r\n    const [amount, setAmount]=useState(1);\r\n    // const [sign, setSign]=useState[1];\r\n   \r\n    const { addTransaction } = useContext(GlobalContext);\r\n    const onSubmit= e => {\r\n        e.preventDefault();\r\n    const newTransaction = {\r\n            id: Math.floor(Math.random()*10000000),\r\n            description,\r\n            amount: +amount \r\n        };\r\n        addTransaction(newTransaction);\r\n    };\r\n    // setSign(event) {\r\n    // console.log(event.target.value);\r\n    // };\r\n    \r\n    return (\r\n        <div>\r\n             <h3>Add new transaction</h3>\r\n      <form id=\"form\" onSubmit={onSubmit}>\r\n          \r\n        <div className=\"form-control\">\r\n        \r\n            <label htmlFor=\"description\">\r\n              Please write desciption of the transaction <br/>\r\n            </label>\r\n          <input \r\n          type=\"text\" \r\n          value={description} \r\n          onChange={(e)=>setDescription(e.target.value)} \r\n          placeholder=\"Enter text...\" />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\"\r\n            >Amount <br/>\r\n            {\r\n              //(negative - expense, positive - income)\r\n            }\r\n            </label>\r\n          <input \r\n          type=\"number\" \r\n          value={amount} \r\n          onChange={(e)=>setAmount(e.target.value)} \r\n          placeholder=\"Enter amount...\" />\r\n          </div>\r\n         {// Added radio  button for incom or expense choice \r\n         }\r\n          <div onChange={(e)=>setAmount(e.target.value * amount)}>\r\n\r\n          <label htmlFor=\"expense\">Income or expense?</label><br/>\r\n          <input type=\"radio\" \r\n              id=\"income\" \r\n              name=\"sign\" \r\n              defaultChecked\r\n              value={1} \r\n              />\r\n            <label htmlFor=\"income\">Income</label><span/>\r\n\r\n              <input type=\"radio\" \r\n              id=\"expense\" \r\n              name=\"sign\" \r\n              value={-1} \r\n              />\r\n            <label htmlFor=\"expense\">Expense</label><br/>\r\n            \r\n              \r\n          </div>\r\n        <button className=\"btn\" >Add transaction</button>\r\n      </form> \r\n      </div>\r\n    )\r\n};\r\n","import React from 'react';\nimport './App.css';\nimport { Header } from './components/Header';\nimport { CurrentBalance } from './components/CurrentBalance';\nimport { IncomeExpense } from './components/IncomeExpense';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\nimport { GlobalProvider } from './context/GlobalContext';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n        <Header></Header>\n      <div className=\"container\">\n        \n        <CurrentBalance></CurrentBalance>\n        <IncomeExpense></IncomeExpense>\n        <TransactionList></TransactionList>\n        <AddTransaction></AddTransaction>\n      </div>\n     \n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}